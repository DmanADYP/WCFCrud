//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/CRUDWithJSONinWCF")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceProduct")]
    public interface IServiceProduct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/findAll", ReplyAction="http://tempuri.org/IServiceProduct/findAllResponse")]
        WebApplication1.ServiceReference1.Product[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/findAll", ReplyAction="http://tempuri.org/IServiceProduct/findAllResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Product[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/find", ReplyAction="http://tempuri.org/IServiceProduct/findResponse")]
        WebApplication1.ServiceReference1.Product find(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/find", ReplyAction="http://tempuri.org/IServiceProduct/findResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Product> findAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/create", ReplyAction="http://tempuri.org/IServiceProduct/createResponse")]
        bool create(WebApplication1.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/create", ReplyAction="http://tempuri.org/IServiceProduct/createResponse")]
        System.Threading.Tasks.Task<bool> createAsync(WebApplication1.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/edit", ReplyAction="http://tempuri.org/IServiceProduct/editResponse")]
        bool edit(WebApplication1.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/edit", ReplyAction="http://tempuri.org/IServiceProduct/editResponse")]
        System.Threading.Tasks.Task<bool> editAsync(WebApplication1.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/delete", ReplyAction="http://tempuri.org/IServiceProduct/deleteResponse")]
        bool delete(WebApplication1.ServiceReference1.Product prodcut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceProduct/delete", ReplyAction="http://tempuri.org/IServiceProduct/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(WebApplication1.ServiceReference1.Product prodcut);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceProductChannel : WebApplication1.ServiceReference1.IServiceProduct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceProductClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IServiceProduct>, WebApplication1.ServiceReference1.IServiceProduct {
        
        public ServiceProductClient() {
        }
        
        public ServiceProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.ServiceReference1.Product[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Product[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public WebApplication1.ServiceReference1.Product find(string id) {
            return base.Channel.find(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Product> findAsync(string id) {
            return base.Channel.findAsync(id);
        }
        
        public bool create(WebApplication1.ServiceReference1.Product product) {
            return base.Channel.create(product);
        }
        
        public System.Threading.Tasks.Task<bool> createAsync(WebApplication1.ServiceReference1.Product product) {
            return base.Channel.createAsync(product);
        }
        
        public bool edit(WebApplication1.ServiceReference1.Product product) {
            return base.Channel.edit(product);
        }
        
        public System.Threading.Tasks.Task<bool> editAsync(WebApplication1.ServiceReference1.Product product) {
            return base.Channel.editAsync(product);
        }
        
        public bool delete(WebApplication1.ServiceReference1.Product prodcut) {
            return base.Channel.delete(prodcut);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(WebApplication1.ServiceReference1.Product prodcut) {
            return base.Channel.deleteAsync(prodcut);
        }
    }
}
